{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\Chain-info.js\";\nimport { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function switchNetwork() {\n  await window.ethereum.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{\n      chainId: '0x5'\n    }] // Sepolia n'est pas natif pour la fonction de metamask\n  });\n}\n\n// invoke to connect to wallet account\nasync function activate() {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      checkAccount();\n    } catch (err) {\n      console.log('user did not add account...', err);\n    }\n  }\n}\n\n// invoke to check if account is already connected\nasync function checkAccount() {\n  let web3 = new Web3(window.ethereum);\n  setWeb3(web3);\n  const accounts = await web3.eth.getAccounts();\n  setAccount(accounts[0]);\n}\nasync function checkNetwork() {\n  let web3 = new Web3(window.ethereum);\n  const chainID = await web3.eth.getChainId();\n  setChain(chainID);\n}\nasync function checkBlock() {\n  let web3 = new Web3(window.ethereum);\n  const block = await web3.eth.getBlockNumber();\n  setBlock(block);\n}\nfunction ChainInfo() {\n  checkAccount();\n  checkNetwork();\n  checkBlock();\n\n  //render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: info,\n      children: \"Click here to get info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Account address :\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [account, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 35\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Chain ID : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: chain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Latest block : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: block\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = ChainInfo;\nexport default ChainInfo;\nvar _c;\n$RefreshReg$(_c, \"ChainInfo\");","map":{"version":3,"names":["useState","useEffect","Web3","switchNetwork","window","ethereum","request","method","params","chainId","activate","checkAccount","err","console","log","web3","setWeb3","accounts","eth","getAccounts","setAccount","checkNetwork","chainID","getChainId","setChain","checkBlock","block","getBlockNumber","setBlock","ChainInfo","info","account","chain"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/Chain-info.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Web3 from \"web3\";\n\nasync function switchNetwork() {\n  await window.ethereum.request({\n  method: 'wallet_switchEthereumChain',\n  params: [{ chainId: '0x5' }],    // Sepolia n'est pas natif pour la fonction de metamask\n  });\n}\n\n// invoke to connect to wallet account\nasync function activate() {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      checkAccount()\n    } catch (err) {\n      console.log('user did not add account...', err)\n    }\n  }\n}\n\n// invoke to check if account is already connected\nasync function checkAccount() {\n  let web3 = new Web3(window.ethereum)\n  setWeb3(web3)\n  const accounts = await web3.eth.getAccounts()\n  setAccount(accounts[0])\n}\n\nasync function checkNetwork(){\n  let web3 = new Web3(window.ethereum)\n  const chainID = await web3.eth.getChainId()\n  setChain(chainID)\n}\n\nasync function checkBlock(){\n  let web3 = new Web3(window.ethereum)\n  const block = await web3.eth.getBlockNumber()\n  setBlock(block)\n}\n  \n\nfunction ChainInfo(){\n  checkAccount();\n  checkNetwork();\n  checkBlock();\n\n //render\n    return (\n        <div>\n          <button onClick={info}>Click here to get info</button>\n            <div>Account address :<b>{account} </b> </div>\n            <br></br>\n            <div>Chain ID : <b>{chain}</b></div>\n            <br></br>\n            <div>Latest block : <b>{block}</b></div>\n        </div>\n    ); \n}\n\n\nexport default ChainInfo; \n\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AAAC;AAExB,eAAeC,aAAa,GAAG;EAC7B,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;IAC9BC,MAAM,EAAE,4BAA4B;IACpCC,MAAM,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAAK;EACjC,CAAC,CAAC;AACJ;;AAEA;AACA,eAAeC,QAAQ,GAAG;EACxB,IAAIN,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChEI,YAAY,EAAE;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,GAAG,CAAC;IACjD;EACF;AACF;;AAEA;AACA,eAAeD,YAAY,GAAG;EAC5B,IAAII,IAAI,GAAG,IAAIb,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;EACpCW,OAAO,CAACD,IAAI,CAAC;EACb,MAAME,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAG,CAACC,WAAW,EAAE;EAC7CC,UAAU,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzB;AAEA,eAAeI,YAAY,GAAE;EAC3B,IAAIN,IAAI,GAAG,IAAIb,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;EACpC,MAAMiB,OAAO,GAAG,MAAMP,IAAI,CAACG,GAAG,CAACK,UAAU,EAAE;EAC3CC,QAAQ,CAACF,OAAO,CAAC;AACnB;AAEA,eAAeG,UAAU,GAAE;EACzB,IAAIV,IAAI,GAAG,IAAIb,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;EACpC,MAAMqB,KAAK,GAAG,MAAMX,IAAI,CAACG,GAAG,CAACS,cAAc,EAAE;EAC7CC,QAAQ,CAACF,KAAK,CAAC;AACjB;AAGA,SAASG,SAAS,GAAE;EAClBlB,YAAY,EAAE;EACdU,YAAY,EAAE;EACdI,UAAU,EAAE;;EAEb;EACG,oBACI;IAAA,wBACE;MAAQ,OAAO,EAAEK,IAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eACpD;MAAA,6CAAsB;QAAA,WAAIC,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,uCAAgB;QAAA,UAAIC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACpC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,2CAAoB;QAAA,UAAIN;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEd;AAAC,KAhBQG,SAAS;AAmBlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}