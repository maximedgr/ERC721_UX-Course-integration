{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\Chain-info.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function switchNetwork() {\n  await window.ethereum.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{\n      chainId: '0x11155111'\n    }] // chainId must be in HEX with 0x in front\n  });\n}\n\nfunction ChainInfo() {\n  _s();\n  //state zone\n  const [account, setAccount] = useState();\n  const [chain, setChain] = useState();\n  const [block, setblock] = useState();\n  const [iscorrectNetwork, setNtwk] = useState();\n\n  //comportement zone\n  const info = async () => {\n    const {\n      ethereum\n    } = window;\n    const _account = ethereum.selectedAddress;\n    const chainId = ethereum.networkVersion;\n    const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n    window.web3 = new Web3(window.ethereum);\n    let lastblock = await web3.eth.getBlockNumber();\n    setAccount(_account);\n    setChain(chainId);\n    setblock(lastblock);\n  };\n\n  //render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: info,\n      children: \"Click here to get info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Account address :\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [account, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Chain ID : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: chain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Latest block : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: block\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ChainInfo, \"80ClUC+vzqpmEHYR0camvWi70H8=\");\n_c = ChainInfo;\nexport default ChainInfo;\nvar _c;\n$RefreshReg$(_c, \"ChainInfo\");","map":{"version":3,"names":["useState","Web3","switchNetwork","window","ethereum","request","method","params","chainId","ChainInfo","account","setAccount","chain","setChain","block","setblock","iscorrectNetwork","setNtwk","info","_account","selectedAddress","networkVersion","web3","givenProvider","lastblock","eth","getBlockNumber"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/Chain-info.js"],"sourcesContent":["import { useState } from \"react\";\nimport Web3 from \"web3\";\n\nasync function switchNetwork() {\n  await window.ethereum.request({\n  method: 'wallet_switchEthereumChain',\n  params: [{ chainId: '0x11155111' }],    // chainId must be in HEX with 0x in front\n  });\n}\n  \n\nfunction ChainInfo(){\n\n//state zone\nconst [account, setAccount] = useState(); \nconst [chain, setChain] = useState(); \nconst [block, setblock] = useState();\nconst [iscorrectNetwork,setNtwk] = useState();  \n\n//comportement zone\nconst info = async()=>  {\n\n  const {ethereum} = window; \n  const _account = ethereum.selectedAddress; \n  const chainId =  ethereum.networkVersion;  \n  const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n  window.web3 = new Web3(window.ethereum);\n  let lastblock = await web3.eth.getBlockNumber();\n\n  setAccount(_account); \n  setChain(chainId); \n  setblock(lastblock)\n  \n\n }\n\n //render\n    return (\n        <div>\n          <button onClick={info}>Click here to get info</button>\n            <div>Account address :<b>{account} </b> </div>\n            <br></br>\n            <div>Chain ID : <b>{chain}</b></div>\n            <br></br>\n            <div>Latest block : <b>{block}</b></div>\n\n            \n        </div>\n    ); \n}\n\n\nexport default ChainInfo; "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,MAAM;AAAC;AAExB,eAAeC,aAAa,GAAG;EAC7B,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;IAC9BC,MAAM,EAAE,4BAA4B;IACpCC,MAAM,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAa,CAAC,CAAC,CAAK;EACxC,CAAC,CAAC;AACJ;;AAGA,SAASC,SAAS,GAAE;EAAA;EAEpB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,EAAE;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAE;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,EAAE;EACpC,MAAM,CAACgB,gBAAgB,EAACC,OAAO,CAAC,GAAGjB,QAAQ,EAAE;;EAE7C;EACA,MAAMkB,IAAI,GAAG,YAAW;IAEtB,MAAM;MAACd;IAAQ,CAAC,GAAGD,MAAM;IACzB,MAAMgB,QAAQ,GAAGf,QAAQ,CAACgB,eAAe;IACzC,MAAMZ,OAAO,GAAIJ,QAAQ,CAACiB,cAAc;IACxC,MAAMC,IAAI,GAAG,IAAIrB,IAAI,CAACA,IAAI,CAACsB,aAAa,IAAI,qBAAqB,CAAC;IAClEpB,MAAM,CAACmB,IAAI,GAAG,IAAIrB,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;IACvC,IAAIoB,SAAS,GAAG,MAAMF,IAAI,CAACG,GAAG,CAACC,cAAc,EAAE;IAE/Cf,UAAU,CAACQ,QAAQ,CAAC;IACpBN,QAAQ,CAACL,OAAO,CAAC;IACjBO,QAAQ,CAACS,SAAS,CAAC;EAGpB,CAAC;;EAED;EACG,oBACI;IAAA,wBACE;MAAQ,OAAO,EAAEN,IAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eACpD;MAAA,6CAAsB;QAAA,WAAIR,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,uCAAgB;QAAA,UAAIE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACpC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,2CAAoB;QAAA,UAAIE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAGtC;AAEd;AAAC,GAtCQL,SAAS;AAAA,KAATA,SAAS;AAyClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}