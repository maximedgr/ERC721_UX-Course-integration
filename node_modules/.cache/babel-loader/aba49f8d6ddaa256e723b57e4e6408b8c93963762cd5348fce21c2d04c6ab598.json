{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\FakeBaycTokenInfo.js\",\n  _s2 = $RefreshSig$();\nimport FakeBaycABI from \"../ABI/FakeBAYC.json\";\nimport { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FakeBaycTokenInfo() {\n  _s2();\n  var _s = $RefreshSig$();\n  //state zone \n  const [tokenId, setTokenId] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [attribute, setAttribute] = useState();\n  const [image, setImage] = useState(\"\");\n  const [chain, setChain] = useState(null);\n  useEffect(() => {\n    checkTokenID();\n    checkNetwork();\n    checkAccount();\n  }, []);\n  async function checkTokenID() {\n    _s();\n    let token = useParams();\n    setTokenId(token);\n  }\n  _s(checkTokenID, \"kWYLvQyenlIfuAcmUZDQ9f7B1f8=\", false, function () {\n    return [useParams];\n  });\n  async function checkNetwork() {\n    let web3 = new Web3(window.ethereum);\n    const chainID = await web3.eth.getChainId();\n    await setChain(chainID);\n  }\n  async function checkAccount() {\n    let web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n  }\n  async function getFakeBAYCdata() {\n    const fakeBaycData = FakeBaycABI.networks[chain];\n    if (fakeBaycData) {\n      const contrat = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address);\n      let info = await contrat.methods.tokenURI(tokenId).call();\n      const jsonURI = await fetch(info).then(res => res.json());\n      setAttribute(JSON.stringify(jsonURI.attributes));\n      setImage(jsonURI.image);\n      console.log(jsonURI);\n    } else {\n      window.alert('Error : FakeBAYC contract not deployed / no detected network');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s2(FakeBaycTokenInfo, \"6l8bosYXbU1OV8WSXwIT8D9QfJo=\");\n_c = FakeBaycTokenInfo;\nexport default FakeBaycTokenInfo;\nvar _c;\n$RefreshReg$(_c, \"FakeBaycTokenInfo\");","map":{"version":3,"names":["FakeBaycABI","useState","useEffect","Web3","useParams","FakeBaycTokenInfo","tokenId","setTokenId","account","setAccount","web3","setWeb3","attribute","setAttribute","image","setImage","chain","setChain","checkTokenID","checkNetwork","checkAccount","token","window","ethereum","chainID","eth","getChainId","accounts","getAccounts","getFakeBAYCdata","fakeBaycData","networks","contrat","Contract","abi","address","info","methods","tokenURI","call","jsonURI","fetch","then","res","json","JSON","stringify","attributes","console","log","alert"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/FakeBaycTokenInfo.js"],"sourcesContent":["import FakeBaycABI from \"../ABI/FakeBAYC.json\"\nimport { useState, useEffect } from 'react'\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n\n\nfunction FakeBaycTokenInfo() {\n\n    //state zone \n    const[tokenId, setTokenId] = useState(0);\n    const [account, setAccount] = useState(null); \n    const [web3, setWeb3] = useState(null);\n    const[attribute, setAttribute]= useState(); \n    const [image, setImage] = useState(\"\");\n    const [chain, setChain] = useState(null);\n    \n    useEffect(() => {\n        checkTokenID();\n        checkNetwork();\n        checkAccount();\n    }, [])\n\n    async function checkTokenID(){\n        let token = useParams()\n        setTokenId(token);\n    }\n    async function checkNetwork(){\n        let web3 = new Web3(window.ethereum)\n        const chainID = await web3.eth.getChainId()\n        await setChain(chainID);\n    }\n    async function checkAccount() {\n        let web3 = new Web3(window.ethereum)\n        setWeb3(web3)\n        const accounts = await web3.eth.getAccounts()\n        setAccount(accounts[0])\n      }\n\n\n    async function getFakeBAYCdata(){\n        const fakeBaycData = FakeBaycABI.networks[chain]\n    \n        if(fakeBaycData){\n            const contrat = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address)\n            let info = await contrat.methods.tokenURI(tokenId).call();\n            const jsonURI = await fetch(info).then(res => res.json()); \n            setAttribute(JSON.stringify(jsonURI.attributes));  \n            setImage(jsonURI.image); \n            console.log(jsonURI);\n\n        } else{\n            window.alert('Error : FakeBAYC contract not deployed / no detected network')\n        }\n    }\n\n\n\n    return (\n        <div>\n            \n        </div>            \n    )\n}\n\nexport default FakeBaycTokenInfo; "],"mappings":";;AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAI7C,SAASC,iBAAiB,GAAG;EAAA;EAAA;EAEzB;EACA,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAK,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAEZ,QAAQ,EAAE;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZgB,YAAY,EAAE;IACdC,YAAY,EAAE;IACdC,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeF,YAAY,GAAE;IAAA;IACzB,IAAIG,KAAK,GAAGjB,SAAS,EAAE;IACvBG,UAAU,CAACc,KAAK,CAAC;EACrB;EAAC,GAHcH,YAAY;IAAA,QACXd,SAAS;EAAA;EAGzB,eAAee,YAAY,GAAE;IACzB,IAAIT,IAAI,GAAG,IAAIP,IAAI,CAACmB,MAAM,CAACC,QAAQ,CAAC;IACpC,MAAMC,OAAO,GAAG,MAAMd,IAAI,CAACe,GAAG,CAACC,UAAU,EAAE;IAC3C,MAAMT,QAAQ,CAACO,OAAO,CAAC;EAC3B;EACA,eAAeJ,YAAY,GAAG;IAC1B,IAAIV,IAAI,GAAG,IAAIP,IAAI,CAACmB,MAAM,CAACC,QAAQ,CAAC;IACpCZ,OAAO,CAACD,IAAI,CAAC;IACb,MAAMiB,QAAQ,GAAG,MAAMjB,IAAI,CAACe,GAAG,CAACG,WAAW,EAAE;IAC7CnB,UAAU,CAACkB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzB;EAGF,eAAeE,eAAe,GAAE;IAC5B,MAAMC,YAAY,GAAG9B,WAAW,CAAC+B,QAAQ,CAACf,KAAK,CAAC;IAEhD,IAAGc,YAAY,EAAC;MACZ,MAAME,OAAO,GAAG,IAAItB,IAAI,CAACe,GAAG,CAACQ,QAAQ,CAACjC,WAAW,CAACkC,GAAG,EAAEJ,YAAY,CAACK,OAAO,CAAC;MAC5E,IAAIC,IAAI,GAAG,MAAMJ,OAAO,CAACK,OAAO,CAACC,QAAQ,CAAChC,OAAO,CAAC,CAACiC,IAAI,EAAE;MACzD,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAACL,IAAI,CAAC,CAACM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;MACzD/B,YAAY,CAACgC,IAAI,CAACC,SAAS,CAACN,OAAO,CAACO,UAAU,CAAC,CAAC;MAChDhC,QAAQ,CAACyB,OAAO,CAAC1B,KAAK,CAAC;MACvBkC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IAExB,CAAC,MAAK;MACFlB,MAAM,CAAC4B,KAAK,CAAC,8DAA8D,CAAC;IAChF;EACJ;EAIA,oBACI;IAAA;IAAA;IAAA;EAAA,QAEM;AAEd;AAAC,IAxDQ7C,iBAAiB;AAAA,KAAjBA,iBAAiB;AA0D1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}