{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\Chain-info.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChainInfo() {\n  _s();\n  //State definition  \n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState(null);\n  const [block, setBlock] = useState(null);\n  const [web3, setWeb3] = useState(null);\n\n  // useEffect(() => {\n  //   checkAccount()\n  // }, [])\n\n  // invoke to connect to wallet account\n  async function activate() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        checkAccount();\n      } catch (err) {\n        console.log('user did not add account...', err);\n      }\n    }\n  }\n\n  // invoke to check if account is already connected\n  async function checkAccount() {\n    let web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n  }\n  async function checkNetwork() {\n    let web3 = new Web3(window.ethereum);\n    const chainID = await web3.eth.getChainId();\n    if (chainID != \"11155111\") {\n      await switchNetwork();\n    } else {\n      setChain(chainID);\n    }\n  }\n  async function checkBlock() {\n    let web3 = new Web3(window.ethereum);\n    const block = await web3.eth.getBlockNumber();\n    setBlock(block);\n  }\n  async function switchNetwork() {\n    let web3 = new Web3(window.ethereum);\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: '0x5'\n      }] // Sepolia n'est pas natif pour la fonction de metamask\n    });\n\n    const chainID = await web3.eth.getChainId();\n    setChain(chainID);\n  }\n  const info = async () => {\n    activate();\n    checkNetwork();\n    checkBlock();\n  };\n\n  //render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: info,\n      children: \"Click here to get info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), account && chain && block && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Account address :\", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [account, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Chain ID : \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: chain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Latest block : \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: block\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(ChainInfo, \"euWS+KsXDcItPcJTx/SaJc+Mwws=\");\n_c = ChainInfo;\nexport default ChainInfo;\nvar _c;\n$RefreshReg$(_c, \"ChainInfo\");","map":{"version":3,"names":["useState","useEffect","Web3","ChainInfo","account","setAccount","chain","setChain","block","setBlock","web3","setWeb3","activate","window","ethereum","request","method","checkAccount","err","console","log","accounts","eth","getAccounts","checkNetwork","chainID","getChainId","switchNetwork","checkBlock","getBlockNumber","params","chainId","info"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/Chain-info.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Web3 from \"web3\";\n\nfunction ChainInfo(){\n\n//State definition  \nconst [account, setAccount] = useState(null);\nconst [chain, setChain] = useState(null); \nconst [block, setBlock] = useState(null);\nconst [web3, setWeb3] = useState(null);\n\n\n// useEffect(() => {\n//   checkAccount()\n// }, [])\n\n// invoke to connect to wallet account\nasync function activate() {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      checkAccount()\n    } catch (err) {\n      console.log('user did not add account...', err)\n    }\n  }\n}\n\n// invoke to check if account is already connected\nasync function checkAccount() {\n  let web3 = new Web3(window.ethereum)\n  setWeb3(web3)\n  const accounts = await web3.eth.getAccounts()\n  setAccount(accounts[0])\n}\n\nasync function checkNetwork(){\n  let web3 = new Web3(window.ethereum)\n  const chainID = await web3.eth.getChainId()\n  if(chainID!=\"11155111\"){\n    await switchNetwork();\n  }\n  else{\n    setChain(chainID)\n  }\n}\n\nasync function checkBlock(){\n  let web3 = new Web3(window.ethereum)\n  const block = await web3.eth.getBlockNumber()\n  setBlock(block)\n}\n\nasync function switchNetwork() {\n  let web3 = new Web3(window.ethereum)\n  await window.ethereum.request({\n  method: 'wallet_switchEthereumChain',\n  params: [{ chainId: '0x5' }],    // Sepolia n'est pas natif pour la fonction de metamask\n  });\n  const chainID = await web3.eth.getChainId()\n  setChain(chainID)\n}\n  \nconst info = async()=>  { \n\n  activate();\n  checkNetwork();\n  checkBlock();\n  \n}\n\n //render\n    return (\n        <div>\n          <button onClick={info}>Click here to get info</button>\n            {account && chain && block && <>\n              <div>Account address :<b>{account} </b> </div>\n              <br></br>\n              <div>Chain ID : <b>{chain}</b></div>\n              <br></br>\n              <div>Latest block : <b>{block}</b></div>\n            </>}\n        </div>\n    ); \n}\n\n\nexport default ChainInfo; \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}