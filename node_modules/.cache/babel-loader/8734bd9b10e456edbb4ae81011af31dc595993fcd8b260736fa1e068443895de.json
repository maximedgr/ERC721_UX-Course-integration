{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\FakeNefturiansUserInfo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IpfsImage } from 'react-ipfs-image';\nimport Web3 from \"web3\";\nimport FakeNefturianABI from \"../ABI/FakeNefturian.json\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FakeNefturiansUserInfo() {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const [list, setList] = useState([]);\n  const [userwallet, setUserWallet] = useState();\n  const userAddress = useParams();\n  useEffect(() => {\n    setUserWallet(userAddress.userAddress);\n    getBalance();\n    getBalanceAndToken();\n  }, []);\n\n  //contract zone \n  const contract_abi = FakeNefturianABI.abi;\n  const contract_address = \"0x9bAADf70BD9369F54901CF3Ee1b3c63b60F4F0ED\";\n  let web3 = new Web3(window.ethereum);\n  var contract = new web3.eth.Contract(contract_abi, contract_address);\n\n  // retrive user balance\n\n  async function getBalance() {\n    let balance = await contract.methods.balanceOf(userwallet).call();\n    setBalance(balance);\n  }\n  async function getBalanceAndToken() {\n    // get the balance of the user \n    let listing = [];\n    let totalSupply = await contract.methods.totalSupply().call();\n    console.log(totalSupply);\n    for (let i = 0; i < totalSupply; i++) {\n      let tempOwner = await contract.methods.ownerOf(i).call();\n      if (tempOwner == userwallet) {\n        let URI = await contract.methods.tokenURI(i).call();\n        let fetchUri = await fetch(URI).then(res => res.json());\n        listing.push(fetchUri);\n        // console.log(\"FetURI\"+fetchUri);\n        // console.log(\"Lisitng\"+listing);\n      }\n    }\n\n    setList(listing);\n  }\n  async function Refresh() {\n    await getBalance();\n    await getBalanceAndToken();\n  }\n\n  // const elements = list.map(item => {\n  //     console.log(item[0][\"name\"]);\n  //     return (\n  //       <ul key={item.name}>\n  //         <li>{item.name}</li>\n  //         {/* <IpfsImage hash={item.image}/> */}\n  //         <li>{item.description}</li>\n  //       </ul>\n  //     );\n  //   });\n\n  console.log(\"List 0: \" + list[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userwallet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Wallet address : \", userAddress.userAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Refresh,\n      children: \"Refresh info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), balance && elements && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Balance : \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(FakeNefturiansUserInfo, \"rlcx2zi1anRRXTBjY8cVe1XHduM=\", false, function () {\n  return [useParams];\n});\n_c = FakeNefturiansUserInfo;\nexport default FakeNefturiansUserInfo;\nvar _c;\n$RefreshReg$(_c, \"FakeNefturiansUserInfo\");","map":{"version":3,"names":["useState","useEffect","IpfsImage","Web3","FakeNefturianABI","useParams","FakeNefturiansUserInfo","balance","setBalance","list","setList","userwallet","setUserWallet","userAddress","getBalance","getBalanceAndToken","contract_abi","abi","contract_address","web3","window","ethereum","contract","eth","Contract","methods","balanceOf","call","listing","totalSupply","console","log","i","tempOwner","ownerOf","URI","tokenURI","fetchUri","fetch","then","res","json","push","Refresh","elements"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/FakeNefturiansUserInfo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IpfsImage } from 'react-ipfs-image';\nimport Web3 from \"web3\";\nimport FakeNefturianABI from \"../ABI/FakeNefturian.json\"\nimport { useParams } from 'react-router-dom';\n\n\nfunction FakeNefturiansUserInfo(){\n    const[balance, setBalance] = useState(0);\n    const [list, setList] = useState([]);\n    const [userwallet, setUserWallet] = useState();\n\n    const userAddress=useParams();\n    useEffect(() => {\n        setUserWallet(userAddress.userAddress);\n        getBalance();\n        getBalanceAndToken();\n    }, []);\n\n    //contract zone \n    const contract_abi = FakeNefturianABI.abi; \n    const contract_address = \"0x9bAADf70BD9369F54901CF3Ee1b3c63b60F4F0ED\"; \n    let web3 = new Web3(window.ethereum);\n    var contract = new web3.eth.Contract(contract_abi, contract_address);\n\n    // retrive user balance\n\n    async function getBalance() {\n        let balance = await contract.methods.balanceOf(userwallet).call(); \n        setBalance(balance); \n    }\n\n    async function getBalanceAndToken() {\n        // get the balance of the user \n        let listing = [];\n        let totalSupply = await contract.methods.totalSupply().call();\n        console.log(totalSupply);\n        \n        for( let i = 0; i < totalSupply; i++){\n          \n            let tempOwner = await contract.methods.ownerOf(i).call();\n            if(tempOwner == userwallet){\n                let URI = await contract.methods.tokenURI(i).call();\n                let fetchUri = await fetch(URI).then(res => res.json());\n                listing.push(fetchUri);\n                // console.log(\"FetURI\"+fetchUri);\n                // console.log(\"Lisitng\"+listing);\n             }\n        }\n       setList(listing);\n    }\n\n    async function Refresh(){\n        await getBalance();\n        await getBalanceAndToken();\n    }\n\n    // const elements = list.map(item => {\n    //     console.log(item[0][\"name\"]);\n    //     return (\n    //       <ul key={item.name}>\n    //         <li>{item.name}</li>\n    //         {/* <IpfsImage hash={item.image}/> */}\n    //         <li>{item.description}</li>\n    //       </ul>\n    //     );\n    //   });\n\n      console.log(\"List 0: \"+list[0]);\n\n    return (\n        <div>{userwallet && <>\n            <h1>Wallet address : {userAddress.userAddress}</h1> \n            <br></br>       \n        </>\n        }\n        <button onClick={Refresh}>Refresh info</button>\n        {balance && elements && <>\n            <h1>Balance : {balance}</h1>\n            {/* <div>{elements}</div> */}\n        </>}\n        </div>                    \n    )\n    \n}\n\nexport default FakeNefturiansUserInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}