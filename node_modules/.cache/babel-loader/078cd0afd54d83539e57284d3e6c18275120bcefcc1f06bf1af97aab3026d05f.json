{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nfunction _regeneratorRuntime() {\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar DEFAULT_IPFS_GATEWAY_URL = 'https://infura-ipfs.io/ipfs';\nvar cleanUpHash = function cleanUpHash(hash) {\n  // remove the leading 'ipfs://' if it exists\n  if (hash.startsWith('ipfs://')) {\n    return hash.substring(7);\n  }\n  return hash;\n};\nvar getImgUriFromTokenUriHash = /*#__PURE__*/function () {\n  var _ref = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tokenUriHash, ipfsGatewayUrl) {\n    var ipfsHash, ipfsUrl, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (ipfsGatewayUrl === void 0) {\n              ipfsGatewayUrl = DEFAULT_IPFS_GATEWAY_URL;\n            }\n            ipfsHash = cleanUpHash(tokenUriHash);\n            ipfsUrl = ipfsGatewayUrl + \"/\" + ipfsHash;\n            _context.next = 5;\n            return fetch(ipfsUrl);\n          case 5:\n            _context.next = 7;\n            return _context.sent.json();\n          case 7:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.image);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function getImgUriFromTokenUriHash(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar useImgUris = function useImgUris(tokenUriHashes) {\n  var _useState = useState([]),\n    imgURIs = _useState[0],\n    setImgURIs = _useState[1];\n  useEffect(function () {\n    var fetchImgUris = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var imgUris;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.all(tokenUriHashes.map(function (uriHash) {\n                  return getImgUriFromTokenUriHash(uriHash);\n                }));\n              case 2:\n                imgUris = _context2.sent;\n                setImgURIs(imgUris);\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function fetchImgUris() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchImgUris();\n  }, [tokenUriHashes]);\n  return imgURIs;\n};\nvar _excluded = [\"hash\", \"gatewayUrl\"];\nvar IpfsImage = function IpfsImage(_ref) {\n  var hash = _ref.hash,\n    _ref$gatewayUrl = _ref.gatewayUrl,\n    gatewayUrl = _ref$gatewayUrl === void 0 ? DEFAULT_IPFS_GATEWAY_URL : _ref$gatewayUrl,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return React.createElement(\"img\", Object.assign({\n    src: gatewayUrl + \"/\" + cleanUpHash(hash)\n  }, props));\n};\nvar _excluded$1 = [\"hash\", \"gatewayUrl\", \"autoPlay\", \"muted\", \"controls\", \"loop\"];\nvar IpfsVideo = function IpfsVideo(_ref) {\n  var hash = _ref.hash,\n    _ref$gatewayUrl = _ref.gatewayUrl,\n    gatewayUrl = _ref$gatewayUrl === void 0 ? DEFAULT_IPFS_GATEWAY_URL : _ref$gatewayUrl,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return React.createElement(\"video\", Object.assign({\n    loop: true,\n    autoPlay: true,\n    muted: true,\n    controls: true\n  }, props), React.createElement(\"source\", {\n    src: gatewayUrl + \"/\" + cleanUpHash(hash)\n  }));\n};\nvar _excluded$2 = [\"hash\", \"gatewayUrl\", \"autoPlay\", \"muted\", \"controls\", \"loop\"];\nvar IpfsMedia = function IpfsMedia(_ref) {\n  var hash = _ref.hash,\n    _ref$autoPlay = _ref.autoPlay,\n    autoPlay = _ref$autoPlay === void 0 ? true : _ref$autoPlay,\n    _ref$muted = _ref.muted,\n    muted = _ref$muted === void 0 ? true : _ref$muted,\n    _ref$controls = _ref.controls,\n    controls = _ref$controls === void 0 ? true : _ref$controls,\n    _ref$loop = _ref.loop,\n    loop = _ref$loop === void 0 ? true : _ref$loop,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  var _useState = useState(false),\n    imgError = _useState[0],\n    setImgError = _useState[1];\n  var _useState2 = useState(false),\n    vidError = _useState2[0],\n    setVidError = _useState2[1];\n  useEffect(function () {\n    setImgError(false);\n    setVidError(false);\n  }, [hash]);\n  return React.createElement(React.Fragment, null, !imgError && React.createElement(IpfsImage, Object.assign({\n    hash: hash,\n    onError: function onError() {\n      return setImgError(true);\n    }\n  }, props)), !vidError && React.createElement(IpfsVideo, Object.assign({\n    hash: hash,\n    onError: function onError() {\n      return setVidError(true);\n    },\n    autoPlay: autoPlay,\n    muted: muted,\n    controls: controls,\n    loop: loop\n  }, props)));\n};\nvar _excluded$3 = [\"hash\", \"gatewayUrl\", \"autoPlay\", \"muted\", \"controls\", \"loop\"];\nvar IpfsAudio = function IpfsAudio(_ref) {\n  var hash = _ref.hash,\n    _ref$gatewayUrl = _ref.gatewayUrl,\n    gatewayUrl = _ref$gatewayUrl === void 0 ? DEFAULT_IPFS_GATEWAY_URL : _ref$gatewayUrl,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n  return React.createElement(\"audio\", Object.assign({\n    loop: true,\n    autoPlay: true,\n    muted: true,\n    controls: true\n  }, props), React.createElement(\"source\", {\n    src: gatewayUrl + \"/\" + cleanUpHash(hash)\n  }));\n};\nexport { IpfsAudio, IpfsImage, IpfsMedia, IpfsVideo, getImgUriFromTokenUriHash, useImgUris };","map":{"version":3,"mappings":"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","names":["DEFAULT_IPFS_GATEWAY_URL","cleanUpHash","hash","startsWith","substring","getImgUriFromTokenUriHash","tokenUriHash","ipfsGatewayUrl","ipfsHash","ipfsUrl","_context","fetch","json","res","image","useImgUris","tokenUriHashes","useState","imgURIs","setImgURIs","useEffect","fetchImgUris","_context2","Promise","all","map","uriHash","imgUris","IpfsImage","gatewayUrl","props","React","src","IpfsVideo","loop","autoPlay","muted","controls","IpfsMedia","imgError","setImgError","vidError","setVidError","onError","IpfsAudio"],"sources":["C:\\Users\\MAXD0\\Desktop\\ESILV\\A4\\blockchain programming\\my_front\\node_modules\\react-ipfs-image\\src\\utils.ts","C:\\Users\\MAXD0\\Desktop\\ESILV\\A4\\blockchain programming\\my_front\\node_modules\\react-ipfs-image\\src\\components\\IpfsImage.tsx","C:\\Users\\MAXD0\\Desktop\\ESILV\\A4\\blockchain programming\\my_front\\node_modules\\react-ipfs-image\\src\\components\\IpfsVideo.tsx","C:\\Users\\MAXD0\\Desktop\\ESILV\\A4\\blockchain programming\\my_front\\node_modules\\react-ipfs-image\\src\\components\\IpfsMedia.tsx","C:\\Users\\MAXD0\\Desktop\\ESILV\\A4\\blockchain programming\\my_front\\node_modules\\react-ipfs-image\\src\\components\\IpfsAudio.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const DEFAULT_IPFS_GATEWAY_URL = 'https://infura-ipfs.io/ipfs';\n\nexport const cleanUpHash = (hash: string) => {\n  // remove the leading 'ipfs://' if it exists\n  if (hash.startsWith('ipfs://')) {\n    return hash.substring(7);\n  }\n  return hash;\n};\n\nexport const getImgUriFromTokenUriHash = async (\n  tokenUriHash: string,\n  ipfsGatewayUrl = DEFAULT_IPFS_GATEWAY_URL\n) => {\n  const ipfsHash = cleanUpHash(tokenUriHash);\n  const ipfsUrl = `${ipfsGatewayUrl}/${ipfsHash}`;\n  const res = await (await fetch(ipfsUrl)).json();\n  return res.image as string;\n};\n\nexport const useImgUris = (tokenUriHashes: string[]) => {\n  const [imgURIs, setImgURIs] = useState<string[]>([]);\n\n  useEffect(() => {\n    const fetchImgUris = async () => {\n      const imgUris = await Promise.all(\n        tokenUriHashes.map(uriHash => getImgUriFromTokenUriHash(uriHash))\n      );\n      setImgURIs(imgUris);\n    };\n    fetchImgUris();\n  }, [tokenUriHashes]);\n\n  return imgURIs;\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsImageProps extends HTMLAttributes<HTMLImageElement> {\n  hash: string;\n  gatewayUrl?: string;\n}\n\nexport const IpfsImage: FC<IIpfsImageProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  ...props\n}) => {\n  return <img src={`${gatewayUrl}/${cleanUpHash(hash)}`} {...props} />;\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsVideoProps extends HTMLAttributes<HTMLVideoElement> {\n  hash: string;\n  gatewayUrl?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  controls?: boolean;\n}\n\nexport const IpfsVideo: FC<IIpfsVideoProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  autoPlay = true,\n  muted = true,\n  controls = true,\n  loop = true,\n  ...props\n}) => {\n  return (\n    <video loop autoPlay muted controls {...props}>\n      <source src={`${gatewayUrl}/${cleanUpHash(hash)}`} />\n    </video>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FC } from 'react';\nimport { IIpfsVideoProps, IpfsVideo } from './IpfsVideo';\nimport { IIpfsImageProps, IpfsImage } from './IpfsImage';\n\nexport type IIpfsMediaProps = IIpfsVideoProps & IIpfsImageProps;\n\nexport const IpfsMedia: FC<IIpfsMediaProps> = ({\n  hash,\n  gatewayUrl,\n  autoPlay = true,\n  muted = true,\n  controls = true,\n  loop = true,\n  ...props\n}) => {\n  const [imgError, setImgError] = useState(false);\n  const [vidError, setVidError] = useState(false);\n\n  useEffect(() => {\n    setImgError(false);\n    setVidError(false);\n  }, [hash]);\n\n  return (\n    <>\n      {!imgError && (\n        <IpfsImage hash={hash} onError={() => setImgError(true)} {...props} />\n      )}\n      {!vidError && (\n        <IpfsVideo\n          hash={hash}\n          onError={() => setVidError(true)}\n          autoPlay={autoPlay}\n          muted={muted}\n          controls={controls}\n          loop={loop}\n          {...props}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsAudioProps extends HTMLAttributes<HTMLVideoElement> {\n  hash: string;\n  gatewayUrl?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  controls?: boolean;\n}\n\nexport const IpfsAudio: FC<IIpfsAudioProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  autoPlay = true,\n  muted = false,\n  controls = true,\n  loop = false,\n  ...props\n}) => {\n  return (\n    <audio loop autoPlay muted controls {...props}>\n      <source src={`${gatewayUrl}/${cleanUpHash(hash)}`} />\n    </audio>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}