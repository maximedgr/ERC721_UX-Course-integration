{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\FakeBaycTokenInfo.js\",\n  _s = $RefreshSig$();\nimport FakeBaycABI from \"../ABI/FakeBAYC.json\";\nimport { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FakeBaycTokenInfo() {\n  _s();\n  //state zone \n  const [tokenId, setTokenId] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [attribute, setAttribute] = useState();\n  const [image, setImage] = useState(\"\");\n  const [chain, setChain] = useState(null);\n  useEffect(() => {\n    retrieveTokenId();\n    checkNetwork();\n    checkAccount();\n  }, []);\n  async function checkNetwork() {\n    let web3 = new Web3(window.ethereum);\n    const chainID = await web3.eth.getChainId();\n    await setChain(chainID);\n  }\n  async function checkAccount() {\n    let web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n  }\n  async function getFakeBAYCdata() {\n    const fakeBaycData = FakeBaycABI.networks[chain];\n    if (fakeBaycData) {\n      const contrat = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address);\n      let info = await contrat.methods.tokenURI(tokenId).call();\n      const jsonURI = await fetch(info).then(res => res.json());\n      setAttribute(JSON.stringify(jsonURI.attributes));\n      setImage(jsonURI.image);\n      console.log(jsonURI);\n    } else {\n      window.alert('Error : FakeBAYC contract not deployed / no detected network');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tokenId,\n      onChange: e => handleChamp(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: GetTokenInfo,\n      children: \" Get token info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: attribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), \"if(\", image, \"!=\\\"\\\")\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(IpfsImage, {\n        hash: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(FakeBaycTokenInfo, \"6l8bosYXbU1OV8WSXwIT8D9QfJo=\");\n_c = FakeBaycTokenInfo;\nexport default FakeBaycTokenInfo;\nvar _c;\n$RefreshReg$(_c, \"FakeBaycTokenInfo\");","map":{"version":3,"names":["FakeBaycABI","useState","useEffect","Web3","useParams","FakeBaycTokenInfo","tokenId","setTokenId","account","setAccount","web3","setWeb3","attribute","setAttribute","image","setImage","chain","setChain","retrieveTokenId","checkNetwork","checkAccount","window","ethereum","chainID","eth","getChainId","accounts","getAccounts","getFakeBAYCdata","fakeBaycData","networks","contrat","Contract","abi","address","info","methods","tokenURI","call","jsonURI","fetch","then","res","json","JSON","stringify","attributes","console","log","alert","e","handleChamp","GetTokenInfo"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/FakeBaycTokenInfo.js"],"sourcesContent":["import FakeBaycABI from \"../ABI/FakeBAYC.json\"\nimport { useState, useEffect } from 'react'\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n\n\nfunction FakeBaycTokenInfo() {\n\n    //state zone \n    const[tokenId, setTokenId] = useState(0);\n    const [account, setAccount] = useState(null); \n    const [web3, setWeb3] = useState(null);\n    const[attribute, setAttribute]= useState(); \n    const [image, setImage] = useState(\"\");\n    const [chain, setChain] = useState(null);\n    \n    useEffect(() => {\n        retrieveTokenId();\n        checkNetwork();\n        checkAccount();\n\n    }, [])\n\n    async function checkNetwork(){\n        let web3 = new Web3(window.ethereum)\n        const chainID = await web3.eth.getChainId()\n        await setChain(chainID);\n    }\n    async function checkAccount() {\n        let web3 = new Web3(window.ethereum)\n        setWeb3(web3)\n        const accounts = await web3.eth.getAccounts()\n        setAccount(accounts[0])\n      }\n\n\n    async function getFakeBAYCdata(){\n        const fakeBaycData = FakeBaycABI.networks[chain]\n    \n        if(fakeBaycData){\n            const contrat = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address)\n            let info = await contrat.methods.tokenURI(tokenId).call();\n            const jsonURI = await fetch(info).then(res => res.json()); \n            setAttribute(JSON.stringify(jsonURI.attributes));  \n            setImage(jsonURI.image); \n            console.log(jsonURI);\n\n        } else{\n            window.alert('Error : FakeBAYC contract not deployed / no detected network')\n        }\n    }\n\n\n\n    return (\n        <div>\n            <input type=\"text\"value={tokenId} onChange={e=>handleChamp(e)}/>\n                <br></br>\n                    <button onClick={GetTokenInfo}> Get token info</button>\n                    <br></br>\n                    <div>{attribute}</div>\n                <br></br>\n            if({image}!=\"\"){\n                <>\n                    <IpfsImage hash={image}/>\n                </>\n            }\n        </div>            \n    )\n}\n\nexport default FakeBaycTokenInfo; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}