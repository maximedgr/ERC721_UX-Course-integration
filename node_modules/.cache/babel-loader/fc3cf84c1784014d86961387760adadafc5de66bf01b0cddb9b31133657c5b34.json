{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\FakeBayc.js\",\n  _s = $RefreshSig$();\nimport FakeBaycABI from \"../ABI/FakeBAYC.json\";\nimport { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FakeBayc() {\n  _s();\n  //State definition  \n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState(null);\n  const [block, setBlock] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  async function loading() {\n    activate();\n    checkNetwork();\n    checkBlock();\n    getFakeBAYCinfo();\n  }\n  loading();\n\n  // useEffect(() => {\n  //   checkAccount()\n  // }, [])\n\n  // invoke to connect to wallet account\n  async function activate() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        checkAccount();\n      } catch (err) {\n        console.log('user did not add account...', err);\n      }\n    }\n  }\n\n  // invoke to check if account is already connected\n  async function checkAccount() {\n    let web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n  }\n  async function checkNetwork() {\n    let web3 = new Web3(window.ethereum);\n    const chainID = await web3.eth.getChainId();\n    if (chainID != \"11155111\") {\n      await switchNetwork();\n    } else {\n      setChain(chainID);\n    }\n  }\n  async function checkBlock() {\n    let web3 = new Web3(window.ethereum);\n    const block = await web3.eth.getBlockNumber();\n    setBlock(block);\n  }\n  async function switchNetwork() {\n    let web3 = new Web3(window.ethereum);\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: '0x5'\n      }] // Sepolia n'est pas natif pour la fonction de metamask\n    });\n\n    const chainID = await web3.eth.getChainId();\n    setChain(chainID);\n  }\n  async function getFakeBAYCinfo() {\n    const fakeBaycData = FakeBaycABI.networks[chain];\n    if (fakeBaycData) {\n      const fakeBaycABI = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address);\n      let fakeBAYCbalance = await fakeBaycABI.methods.tokenCounter().call();\n      this.setState({\n        fakeBAYCbalance: fakeBAYCbalance.toString()\n      });\n      console.log({\n        balance: fakeBAYCbalance\n      });\n    } else {\n      window.alert('Error : FakeBAYC contract not deployed / no detected network');\n    }\n  }\n\n  //render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      children: [\"FakeBayc number: \", this.state.fakeBAYCbalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(FakeBayc, \"euWS+KsXDcItPcJTx/SaJc+Mwws=\");\n_c = FakeBayc;\nexport default FakeBayc;\nvar _c;\n$RefreshReg$(_c, \"FakeBayc\");","map":{"version":3,"names":["FakeBaycABI","useState","useEffect","Web3","FakeBayc","account","setAccount","chain","setChain","block","setBlock","web3","setWeb3","loading","activate","checkNetwork","checkBlock","getFakeBAYCinfo","window","ethereum","request","method","checkAccount","err","console","log","accounts","eth","getAccounts","chainID","getChainId","switchNetwork","getBlockNumber","params","chainId","fakeBaycData","networks","fakeBaycABI","Contract","abi","address","fakeBAYCbalance","methods","tokenCounter","call","setState","toString","balance","alert","color","state"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/FakeBayc.js"],"sourcesContent":["import FakeBaycABI from \"../ABI/FakeBAYC.json\"\nimport { useState, useEffect } from 'react'\nimport Web3 from \"web3\";\n\nfunction FakeBayc(){\n\n//State definition  \nconst [account, setAccount] = useState(null);\nconst [chain, setChain] = useState(null); \nconst [block, setBlock] = useState(null);\nconst [web3, setWeb3] = useState(null);\n\nasync function loading(){\n    activate();\n    checkNetwork();\n    checkBlock();\n    getFakeBAYCinfo();\n}\n\nloading();\n\n// useEffect(() => {\n//   checkAccount()\n// }, [])\n\n// invoke to connect to wallet account\nasync function activate() {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      checkAccount()\n    } catch (err) {\n      console.log('user did not add account...', err)\n    }\n  }\n}\n\n// invoke to check if account is already connected\nasync function checkAccount() {\n  let web3 = new Web3(window.ethereum)\n  setWeb3(web3)\n  const accounts = await web3.eth.getAccounts()\n  setAccount(accounts[0])\n}\n\nasync function checkNetwork(){\n  let web3 = new Web3(window.ethereum)\n  const chainID = await web3.eth.getChainId()\n  if(chainID!=\"11155111\"){\n    await switchNetwork();\n  }\n  else{\n    setChain(chainID)\n  }\n}\n\nasync function checkBlock(){\n  let web3 = new Web3(window.ethereum)\n  const block = await web3.eth.getBlockNumber()\n  setBlock(block)\n}\n\nasync function switchNetwork() {\n  let web3 = new Web3(window.ethereum)\n  await window.ethereum.request({\n  method: 'wallet_switchEthereumChain',\n  params: [{ chainId: '0x5' }],    // Sepolia n'est pas natif pour la fonction de metamask\n  });\n  const chainID = await web3.eth.getChainId()\n  setChain(chainID)\n}\n\nasync function getFakeBAYCinfo(){\n    const fakeBaycData = FakeBaycABI.networks[chain]\n\n        if(fakeBaycData){\n            const fakeBaycABI = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address)\n            let fakeBAYCbalance = await fakeBaycABI.methods.tokenCounter().call()\n            this.setState({fakeBAYCbalance : fakeBAYCbalance.toString()})\n            console.log({balance: fakeBAYCbalance})\n        } else{\n            window.alert('Error : FakeBAYC contract not deployed / no detected network')\n        }\n}\n\n //render\n    return (\n        <div>\n          <div style={{color:\"black\"}}>FakeBayc number: {this.state.fakeBAYCbalance}</div>\n        </div>\n    ); \n}\n\n\nexport default FakeBayc; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}