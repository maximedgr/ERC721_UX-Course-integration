{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAXD0\\\\Desktop\\\\ESILV\\\\A4\\\\blockchain programming\\\\my_front\\\\src\\\\components\\\\pages\\\\FakeBayc.js\";\nimport React, { Component } from \"react\";\nimport FakeBaycABI from \"../ABI/FakeBAYC.json\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FakeBayc extends Component {\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No etehereum browser detected ! Check out your Metamask!');\n    }\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({\n      account: account[0]\n    });\n    const networkId = await web3.eth.net.getId();\n\n    //Load Tether Contract\n    const fakeBaycData = FakeBaycABI.networks[networkId];\n    if (fakeBaycData) {\n      const fakeBaycABI = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address);\n      let fakeBAYCbalance = await fakeBaycABI.methods.tokenCounter().call();\n      this.setState({\n        fakeBAYCbalance: fakeBAYCbalance.toString()\n      });\n      console.log({\n        balance: fakeBAYCbalance\n      });\n    } else {\n      window.alert('Error : FakeBAYC contract not deployed / no detected network');\n    }\n    this.setState({\n      loading: false\n    });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '0x0',\n      fakeBAYCbalance: '0',\n      loading: true\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      children: [\"FakeBayc number: \", this.state.fakeBAYCbalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default FakeBayc;","map":{"version":3,"names":["React","Component","FakeBaycABI","Web3","FakeBayc","UNSAFE_componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","networkId","net","getId","fakeBaycData","networks","fakeBaycABI","Contract","abi","address","fakeBAYCbalance","methods","tokenCounter","call","toString","console","log","balance","loading","constructor","props","state","render","color"],"sources":["C:/Users/MAXD0/Desktop/ESILV/A4/blockchain programming/my_front/src/components/pages/FakeBayc.js"],"sourcesContent":["import React,{Component} from \"react\";\nimport FakeBaycABI from \"../ABI/FakeBAYC.json\"\nimport Web3 from \"web3\";\n\n\nclass FakeBayc extends Component {\n\n    async UNSAFE_componentWillMount(){\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3(){\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } \n        else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else{\n            window.alert('No etehereum browser detected ! Check out your Metamask!')\n        }\n    }\n\n    async loadBlockchainData(){\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts()\n        this.setState({account : account[0]})\n        const networkId = await web3.eth.net.getId()\n\n\n        //Load Tether Contract\n        const fakeBaycData = FakeBaycABI.networks[networkId]\n\n        if(fakeBaycData){\n            const fakeBaycABI = new web3.eth.Contract(FakeBaycABI.abi, fakeBaycData.address)\n            let fakeBAYCbalance = await fakeBaycABI.methods.tokenCounter().call()\n            this.setState({fakeBAYCbalance : fakeBAYCbalance.toString()})\n            console.log({balance: fakeBAYCbalance})\n        } else{\n            window.alert('Error : FakeBAYC contract not deployed / no detected network')\n        }\n\n        this.setState({loading : false})\n\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {\n            account : '0x0',\n            fakeBAYCbalance: '0',\n            loading:true\n\n        }\n    }\n\n  render() {\n    return(\n    <div style={{color:\"black\"}}>FakeBayc number: {this.state.fakeBAYCbalance}</div>\n    )\n  }\n}\n\nexport default FakeBayc;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,MAAM;AAAC;AAGxB,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAE7B,MAAMI,yBAAyB,GAAE;IAC7B,MAAM,IAAI,CAACC,QAAQ,EAAE;IACrB,MAAM,IAAI,CAACC,kBAAkB,EAAE;EACnC;EAEA,MAAMD,QAAQ,GAAE;IACZ,IAAGE,MAAM,CAACC,QAAQ,EAAC;MACfD,MAAM,CAACE,IAAI,GAAG,IAAIP,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC;MACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;IAClC,CAAC,MACI,IAAGH,MAAM,CAACE,IAAI,EAAC;MAChBF,MAAM,CAACE,IAAI,GAAG,IAAIP,IAAI,CAACK,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IACvD,CAAC,MACG;MACAJ,MAAM,CAACK,KAAK,CAAC,0DAA0D,CAAC;IAC5E;EACJ;EAEA,MAAMN,kBAAkB,GAAE;IACtB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,EAAE;IAC5C,IAAI,CAACC,QAAQ,CAAC;MAACH,OAAO,EAAGA,OAAO,CAAC,CAAC;IAAC,CAAC,CAAC;IACrC,MAAMI,SAAS,GAAG,MAAMR,IAAI,CAACK,GAAG,CAACI,GAAG,CAACC,KAAK,EAAE;;IAG5C;IACA,MAAMC,YAAY,GAAGnB,WAAW,CAACoB,QAAQ,CAACJ,SAAS,CAAC;IAEpD,IAAGG,YAAY,EAAC;MACZ,MAAME,WAAW,GAAG,IAAIb,IAAI,CAACK,GAAG,CAACS,QAAQ,CAACtB,WAAW,CAACuB,GAAG,EAAEJ,YAAY,CAACK,OAAO,CAAC;MAChF,IAAIC,eAAe,GAAG,MAAMJ,WAAW,CAACK,OAAO,CAACC,YAAY,EAAE,CAACC,IAAI,EAAE;MACrE,IAAI,CAACb,QAAQ,CAAC;QAACU,eAAe,EAAGA,eAAe,CAACI,QAAQ;MAAE,CAAC,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAAC;QAACC,OAAO,EAAEP;MAAe,CAAC,CAAC;IAC3C,CAAC,MAAK;MACFnB,MAAM,CAACK,KAAK,CAAC,8DAA8D,CAAC;IAChF;IAEA,IAAI,CAACI,QAAQ,CAAC;MAACkB,OAAO,EAAG;IAAK,CAAC,CAAC;EAEpC;EAEAC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTxB,OAAO,EAAG,KAAK;MACfa,eAAe,EAAE,GAAG;MACpBQ,OAAO,EAAC;IAEZ,CAAC;EACL;EAEFI,MAAM,GAAG;IACP,oBACA;MAAK,KAAK,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAAA,gCAAmB,IAAI,CAACF,KAAK,CAACX,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAElF;AACF;AAEA,eAAevB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}