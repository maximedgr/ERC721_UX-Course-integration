{"version":3,"file":"react-ipfs-image.cjs.development.js","sources":["../src/utils.ts","../src/components/IpfsImage.tsx","../src/components/IpfsVideo.tsx","../src/components/IpfsMedia.tsx","../src/components/IpfsAudio.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const DEFAULT_IPFS_GATEWAY_URL = 'https://infura-ipfs.io/ipfs';\n\nexport const cleanUpHash = (hash: string) => {\n  // remove the leading 'ipfs://' if it exists\n  if (hash.startsWith('ipfs://')) {\n    return hash.substring(7);\n  }\n  return hash;\n};\n\nexport const getImgUriFromTokenUriHash = async (\n  tokenUriHash: string,\n  ipfsGatewayUrl = DEFAULT_IPFS_GATEWAY_URL\n) => {\n  const ipfsHash = cleanUpHash(tokenUriHash);\n  const ipfsUrl = `${ipfsGatewayUrl}/${ipfsHash}`;\n  const res = await (await fetch(ipfsUrl)).json();\n  return res.image as string;\n};\n\nexport const useImgUris = (tokenUriHashes: string[]) => {\n  const [imgURIs, setImgURIs] = useState<string[]>([]);\n\n  useEffect(() => {\n    const fetchImgUris = async () => {\n      const imgUris = await Promise.all(\n        tokenUriHashes.map(uriHash => getImgUriFromTokenUriHash(uriHash))\n      );\n      setImgURIs(imgUris);\n    };\n    fetchImgUris();\n  }, [tokenUriHashes]);\n\n  return imgURIs;\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsImageProps extends HTMLAttributes<HTMLImageElement> {\n  hash: string;\n  gatewayUrl?: string;\n}\n\nexport const IpfsImage: FC<IIpfsImageProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  ...props\n}) => {\n  return <img src={`${gatewayUrl}/${cleanUpHash(hash)}`} {...props} />;\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsVideoProps extends HTMLAttributes<HTMLVideoElement> {\n  hash: string;\n  gatewayUrl?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  controls?: boolean;\n}\n\nexport const IpfsVideo: FC<IIpfsVideoProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  autoPlay = true,\n  muted = true,\n  controls = true,\n  loop = true,\n  ...props\n}) => {\n  return (\n    <video loop autoPlay muted controls {...props}>\n      <source src={`${gatewayUrl}/${cleanUpHash(hash)}`} />\n    </video>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FC } from 'react';\nimport { IIpfsVideoProps, IpfsVideo } from './IpfsVideo';\nimport { IIpfsImageProps, IpfsImage } from './IpfsImage';\n\nexport type IIpfsMediaProps = IIpfsVideoProps & IIpfsImageProps;\n\nexport const IpfsMedia: FC<IIpfsMediaProps> = ({\n  hash,\n  gatewayUrl,\n  autoPlay = true,\n  muted = true,\n  controls = true,\n  loop = true,\n  ...props\n}) => {\n  const [imgError, setImgError] = useState(false);\n  const [vidError, setVidError] = useState(false);\n\n  useEffect(() => {\n    setImgError(false);\n    setVidError(false);\n  }, [hash]);\n\n  return (\n    <>\n      {!imgError && (\n        <IpfsImage hash={hash} onError={() => setImgError(true)} {...props} />\n      )}\n      {!vidError && (\n        <IpfsVideo\n          hash={hash}\n          onError={() => setVidError(true)}\n          autoPlay={autoPlay}\n          muted={muted}\n          controls={controls}\n          loop={loop}\n          {...props}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { HTMLAttributes, FC } from 'react';\nimport { cleanUpHash, DEFAULT_IPFS_GATEWAY_URL } from '../utils';\n\nexport interface IIpfsAudioProps extends HTMLAttributes<HTMLVideoElement> {\n  hash: string;\n  gatewayUrl?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  controls?: boolean;\n}\n\nexport const IpfsAudio: FC<IIpfsAudioProps> = ({\n  hash,\n  gatewayUrl = DEFAULT_IPFS_GATEWAY_URL,\n  autoPlay = true,\n  muted = false,\n  controls = true,\n  loop = false,\n  ...props\n}) => {\n  return (\n    <audio loop autoPlay muted controls {...props}>\n      <source src={`${gatewayUrl}/${cleanUpHash(hash)}`} />\n    </audio>\n  );\n};\n"],"names":["DEFAULT_IPFS_GATEWAY_URL","cleanUpHash","hash","startsWith","substring","getImgUriFromTokenUriHash","tokenUriHash","ipfsGatewayUrl","ipfsHash","ipfsUrl","fetch","json","res","image","useImgUris","tokenUriHashes","useState","imgURIs","setImgURIs","useEffect","fetchImgUris","Promise","all","map","uriHash","imgUris","IpfsImage","gatewayUrl","props","React","src","IpfsVideo","loop","autoPlay","muted","controls","IpfsMedia","imgError","setImgError","vidError","setVidError","onError","IpfsAudio"],"mappings":"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"}